package NYT.NChunkServer.NProto;

import "yt/ytlib/chunk_holder/chunk.proto";

////////////////////////////////////////////////////////////////////////////////

message THolderStatistics
{
    required int64 available_space = 1;
    required int64 used_space = 2;
    required int32 chunk_count = 3;
    required int32 session_count = 4;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRegisterHolder
{
    required bytes address = 1;
    required THolderStatistics statistics = 2;
}

message TRspRegisterHolder
{
    required int32 holder_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqHolderHeartbeat
{
    message TChunkAddInfo
    {
        required bytes chunk_id = 1;
        required bool cached = 2;
        required int64 size = 3;
    }

    message TChunkRemoveInfo
    {
        required bytes chunk_id = 1;
        required bool cached = 2;
    }

    message TJobInfo
    {
        required bytes job_id = 1;
        required int32 state = 2;
    }

    required int32 holder_id = 1;
    required THolderStatistics statistics = 2;

    repeated TChunkAddInfo added_chunks = 3;
    repeated TChunkRemoveInfo removed_chunks = 4;

    repeated TJobInfo Jobs = 5;
}

message TRspHolderHeartbeat
{
    message TJobStartInfo
    {
        required int32 type = 1;
        required bytes job_id = 2;
        required bytes chunk_id = 3;
        repeated bytes target_addresses = 4;
    }

    repeated bytes chunks_to_remove = 1;
    repeated TJobStartInfo jobs_to_start = 2;
    repeated bytes jobs_to_stop = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAllocateChunk
{
    required bytes transaction_id = 1;
    required int32 replica_count = 2;
}

message TRspAllocateChunk
{
    required bytes chunk_id = 1;
    repeated bytes holder_addresses = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqConfirmChunks
{
    message TChunkInfo
    {
        required bytes chunk_id = 1;
        repeated bytes holder_addresses = 2;
        required NChunkHolder.NProto.TChunkAttributes attributes = 3;
    }

    required bytes transaction_id = 1;
    repeated TChunkInfo chunks = 2;
}

message TRspConfirmChunks
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqFindChunk
{
    required bytes chunk_id = 1;
}

message TRspFindChunk
{
    repeated bytes holder_addresses = 1;
}

////////////////////////////////////////////////////////////////////////////////
