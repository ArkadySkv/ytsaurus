package NYT.NChunkServer.NProto;

import "yt/ytlib/chunk_holder/chunk.proto";

////////////////////////////////////////////////////////////////////////////////

message THolderStatistics
{
    required int64 AvailableSpace = 1;
    required int64 UsedSpace = 2;
    required int32 ChunkCount = 3;
    required int32 SessionCount = 4;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRegisterHolder
{
    required bytes Address = 1;
    required THolderStatistics Statistics = 2;
}

message TRspRegisterHolder
{
    required int32 HolderId = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqHolderHeartbeat
{
    message TChunkAddInfo
    {
        required bytes ChunkId = 1;
        required int64 Size = 2;
    }

    message TJobInfo
    {
        required bytes JobId = 1;
        required int32 State = 2;
    }

    required int32 HolderId = 1;
    required THolderStatistics Statistics = 2;
    repeated TChunkAddInfo AddedChunks = 3;
    repeated bytes RemovedChunks = 4;
    repeated TJobInfo Jobs = 5;
}

message TRspHolderHeartbeat
{
    message TJobStartInfo
    {
        required int32 Type = 1;
        required bytes JobId = 2;
        required bytes ChunkId = 3;
        repeated bytes TargetAddresses = 4;
    }

    repeated bytes ChunksToRemove = 1;
    repeated TJobStartInfo JobsToStart = 2;
    repeated bytes JobsToStop = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAllocateChunk
{
    required bytes TransactionId = 1;
    required int32 ReplicaCount = 2;
}

message TRspAllocateChunk
{
    required bytes ChunkId = 1;
    repeated bytes HolderAddresses = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqConfirmChunks
{
    message TChunkInfo
    {
        required bytes ChunkId = 1;
        repeated bytes HolderAddresses = 2;
        required NChunkHolder.NProto.TChunkAttributes Attributes = 3;
    }

    required bytes TransactionId = 1;
    repeated TChunkInfo Chunks = 2;
}

message TRspConfirmChunks
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqFindChunk
{
    required bytes ChunkId = 1;
}

message TRspFindChunk
{
    repeated bytes HolderAddresses = 1;
}

////////////////////////////////////////////////////////////////////////////////
