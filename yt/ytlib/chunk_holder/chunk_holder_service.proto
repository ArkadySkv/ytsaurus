package NYT.NChunkHolder.NProto;

import "yt/ytlib/chunk_holder/chunk.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqStartChunk
{
    required bytes chunk_id = 1;
}

message TRspStartChunk
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqFinishChunk
{
    required bytes chunk_id = 1;
    required TChunkAttributes attributes = 2;
}

message TRspFinishChunk
{
    // Returned chunk_info never contains attributes field - 
    // it doesn't make sense cause client sent it in request.
    required TChunkInfo chunk_info = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqPutBlocks
{
    required bytes chunk_id = 1;
    required int32 start_block_index = 2;
}

message TRspPutBlocks
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqSendBlocks
{
    required bytes chunk_id = 1;
    required string address = 2;
    required int32 start_block_index = 3;
    required int32 block_count = 4;
}

message TRspSendBlocks
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqFlushBlock
{
    required bytes chunk_id = 1;
    required int32 block_index = 2;
}

message TRspFlushBlock
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqGetBlocks
{
    required bytes chunk_id = 1;
    repeated int32 block_indexes = 2;
    optional string peer_address = 3;
    optional uint64 peer_expiration_time = 4;
}

message TRspGetBlocks
{
    message TBlockInfo
    {
        required bool data_attached = 1;
        repeated string peer_addresses = 2;
    }

    repeated TBlockInfo blocks = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqPingSession
{
    required bytes chunk_id = 1;
}

message TRspPingSession
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqGetChunkInfo
{
    required bytes chunk_id = 1;
}

message TRspGetChunkInfo
{
    required TChunkInfo chunk_info = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqPrecacheChunk
{
    required bytes chunk_id = 1;
}

message TRspPrecacheChunk
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqUpdatePeer
{
    message TBlockId
    {
        required bytes chunk_id = 1;
        required int32 block_index = 2;
    }

    repeated TBlockId block_ids = 1;
    required string peer_address = 2;
    required uint64 peer_expiration_time = 3;
}

////////////////////////////////////////////////////////////////////////////////
