package NYT.NTableClient.NProto;

import "yt/ytlib/table_client/table_reader.proto";
import "yt/ytlib/misc/guid.proto";

////////////////////////////////////////////////////////////////////////////////

// Branches the table returning the new root chunk list
// where all new chunks must be added to.
message TReqGetChunkListForUpdate
{ }

message TRspGetChunkListForUpdate
{
    required NYT.NProto.TGuid chunk_list_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

// Returns info describing a given portion of table.
message TReqFetch
{
    optional bool fetch_node_addresses = 1 [default = false];
    optional bool fetch_all_meta_extensions = 2 [default = false];

    // Not yet supported.
    repeated int32 extension_tags = 3;

    // Indicates if the negated (i.e. not matching the filters) part
    // of the row set must be returned.
    optional bool negate = 4 [default = false];
}

message TRspFetch
{
    repeated NYT.NTableClient.NProto.TInputChunk chunks = 1;
}

////////////////////////////////////////////////////////////////////////////////

// Raises "sorted" flag for the root chunk list of the table.
// No checks are performed, it's caller's responsibility to ensure proper row order.
message TReqSetSorted
{
    repeated string key_columns = 1;
}

message TRspSetSorted
{ }

////////////////////////////////////////////////////////////////////////////////

// Removes all chunks from the table.
// The table gets "exclusive" lock.
message TReqClear
{ }

message TRspClear
{ }

////////////////////////////////////////////////////////////////////////////////
