package NYT.NChunkClient.NProto;

import "yt/ytlib/misc/guid.proto";
import "yt/ytlib/misc/protobuf_helpers.proto";

////////////////////////////////////////////////////////////////////////////////

message TBlockInfo
{
    required int64 offset = 1;
    required int32 size = 2;
    required uint64 checksum = 3;
}

// Chunk meta extension.
message TBlocksExt
{
    repeated TBlockInfo blocks = 1;
}

message TChunkInfo
{
    // Exact full size (data size plus meta size).
    required int64 size = 1;

    // Not sent during full heartbeats.
    optional uint64 meta_checksum = 2;
}

// Chunk meta extension.
message TMiscExt
{
    // Total size of uncompressed blocks.
    optional int64 uncompressed_data_size = 1 [default = 0];

    // Total size of blocks with data sent to holder.
    optional int64 compressed_data_size = 5 [default = 0];

    // Total size of (key column names + values + 1) in each row.
    // Must be greater than zero.
    optional int64 data_weight = 7 [default = 1];

    // Size of chunk meta (without TMiscExt), obtained via ByteSize.
    optional int64 meta_size = 6 [default = 0];

    // Number of rows in this chunk (tables only).
    optional int64 row_count = 2 [default = 0];

    optional int32 codec = 3 [default = 0];

    // Indicates if the chunk contains a sorted rowset (tables only).
    optional bool sorted = 4 [default = false];

    // Number of key-value pairs across all rows in the chunk.
    optional int64 value_count = 8 [default = 0];

}

// TChunkMeta is stored in *.meta files on data nodes
// and passed around (possibly with a different extension subset).
message TChunkMeta
{
    required int32 type = 1;
    required NYT.NProto.TExtensionSet extensions = 2;

    // Format version validated by reader.
    required int32 version = 3;
}

////////////////////////////////////////////////////////////////////////////////
