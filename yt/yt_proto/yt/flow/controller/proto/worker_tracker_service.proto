package NYT.NFlow.NController.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/core/yson/proto/protobuf_interop.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqHandshake
{
    required string worker_address = 1;
    required string worker_version = 2;
}

message TRspHandshake
{
    required NYT.NProto.TGuid incarnation_id = 1;
    optional string controller_version = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqHeartbeat
{
    required string worker_address = 1;
    required NYT.NProto.TGuid incarnation_id = 2;

    optional int64 dynamic_worker_spec_version = 3;

    message TRunningJob
    {
        required NYT.NProto.TGuid job_id = 1;
        required bytes job_status = 2 [(NYT.NYson.NProto.yson_string) = true];
    }

    repeated TRunningJob running_jobs = 4;
}

message TRspHeartbeat
{
    optional bytes dynamic_worker_spec = 1 [(NYT.NYson.NProto.yson_string) = true];

    message TStartJobCommand
    {
        required NYT.NProto.TGuid job_id = 1;
        required bytes job_spec = 2 [(NYT.NYson.NProto.yson_string) = true];
        required bytes dynamic_job_spec = 3 [(NYT.NYson.NProto.yson_string) = true];
        required bytes epoch = 4 [(NYT.NYson.NProto.yson_string) = true];;
    }

    repeated TStartJobCommand start_job_commands = 2;

    message TReconfigureJobCommand
    {
        required NYT.NProto.TGuid job_id = 1;
        required bytes dynamic_job_spec = 2 [(NYT.NYson.NProto.yson_string) = true];
        required bytes epoch = 3 [(NYT.NYson.NProto.yson_string) = true];
    }

    repeated TReconfigureJobCommand reconfigure_job_commands = 3;

    message TUpdateJobEpochCommand
    {
        required NYT.NProto.TGuid job_id = 1;
        required bytes epoch = 2 [(NYT.NYson.NProto.yson_string) = true];
    }

    repeated TUpdateJobEpochCommand update_job_epoch_commands = 4;

    message TStopJobCommand
    {
        required NYT.NProto.TGuid job_id = 1;
    }

    repeated TStopJobCommand stop_job_commands = 5;

    message TDropJobCommand
    {
        required NYT.NProto.TGuid job_id = 1;
    }

    repeated TDropJobCommand drop_job_commands = 6;
}

////////////////////////////////////////////////////////////////////////////////
