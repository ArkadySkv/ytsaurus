 * ytface.sh -- базовая клиентская библиотека. После ". ./ytface.sh" в окружении появляются упрощённые команды работы с транзакциями, таблицами, I/O и т.п. Набор команд шире, чем нужно скриптам, но далеко не полный. В качестве backend'а ytface.sh подхватывает по-умолчанию curl, хотя есть неполная ветка для mapreduce-yt.
    . ./ytface.sh
    tx=$(start_tx)
    create_table //tmp/z $tx
    printf "a\tb\tc\n" | write_delim //tmp/z $tx gzip_best_compression
    commit_tx $tx
    drop_table //tmp/z

 * daily-tables-delta.sh -- сравнивает списки ежедневных таблиц (вида 20121201) на redwood и yt и выдаёт разницу. По-умолчанию сравнивает по именам, по всему диапазону времени, выдаёт то, чего нет в yt. Ключи -A, -B задают границы по времени, -s сравнивает одинаковые таблицы по rowcount, -u объединяет результаты сравнения по именам и rowcount, -c позволяет видеть дельту со стороны redwood или совпадающие таблицы.
    ./daily-tables-delta.sh -A 20121101 -B 20121231 -u user_sessions //home/redwood/user_sessions
        таблицы, которых нет в yt + неверно скопированные, ровно за два последних месяца 2012 года

 * copy-redwood-to-yt.sh -- переработанный скрипт копирования. Реализует push из redwood в yt. Все действия выполняются в транзакции. Исходно сортированные таблицы после пересылки сортируются. Ключ -f задаёт кодек, использующийся при пересылке данных и сортировке. Ограничения общей скорости и jobcount для mapreduce задаются внутри.
    ./copy-redwood-to-yt.sh -f gzip_best_compression user_intents/20121203 //home/redwood/user_intents/20121203

 * push-little-ones-push -- скрипт mapreduce-задания, запускаемый на стороне redwood скриптом copy-redwood-to-yt.sh. Работает в своей отдельной транзакции, пишет данные по fastbone, поддерживает адресацию прокси по /hosts, чтобы запросы к прокси не были неконтролируемо долгими, входной поток делит на части, каждую из которых пишет отдельным запросом. Ключ -S отключает splitter входного потока.

 * mr-split -- splitter lenval-потока на python, которым пользуется push-little-ones-push. Смоделирован по образу утилиты split из coreutils, только поток делит не по байтам и строкам, а ровно по границам lenval-записей (одна запись -- тройка lenval-значений).
    cat 100M | ./mr-split -C20000000 --filter 'cat >$FILE'; cat x* >100M.2
        разделит 100MB файл на примерно 20-и мегабайтные части и соберёт обратно копию

 * queue-{push,pop,extend} -- скрипты манипулирования очередью в Кипарисе. push и extend добавляет в конец, pop вынимает из начала, так удобнее видеть и доставать голову очереди. Вынимают и модифицируют весь список (под локом), потому что /begin и /end в пользовательской документации не описаны.

 * pump.sh -- базовый скрипт перетягивания ежедневных таблиц. Соединяет daily-tables-delta.sh с copy-redwood-to-yt.sh. -A, -B задают временной диапазон, -n включает dryrun-режим, когда команды копирования не исполняются, а выводятся, -l переводит лог исполнения в файл.
    ./pump.sh -n -A 20121101 user_intents //home/redwood/user_intents
        выводит команды копирования всего, чего не хватает в //home/redwood/user_intents с ноября

* pump-dir.sh -- скрипт для копирования директорий (таблиц заданных префиксом)

* show-dir-diff.sh -- скрипт, показывающий различия в директориях таблиц.
